image:
  repository: authelia/authelia
  pullPolicy: IfNotPresent
  tag: 4.37.5

workload:
  main:
    replicas: 2
    strategy: RollingUpdate
    podSpec:
      containers:
        main:
          command: ["authelia"]
          args: ["--config=/configuration.yaml"]
          envFrom:
            - configMapRef:
                name: authelia-paths
          probes:
            liveness:
              type: http
              path: "/api/health"

            readiness:
              type: http
              path: "/api/health"

            startup:
              type: http
              path: "/api/health"

service:
  main:
    ports:
      main:
        port: 9091
        targetPort: 9091

persistence:
  config:
    enabled: true
    mountPath: "/config"

cnpg:
  main:
    enabled: true
    user: authelia
    database: authelia

redis:
  enabled: true

domain: example.com

server:
  port: 9091
  read_buffer_size: 4096
  write_buffer_size: 4096
  path: ""

log:
  level: trace
  format: text

default_redirection_url: ""
theme: light
totp:
  issuer: ""
  period: 30
  skew: 1

duo_api:
  enabled: false
  hostname: api-123456789.example.com
  integration_key: ABCDEF
  plain_api_key: ""

ntp:
  address: "time.cloudflare.com:123"
  version: 4
  max_desync: 3s
  disable_startup_check: false
  disable_failure: true

authentication_backend:
  disable_reset_password: false
  refresh_interval: 5m

  ldap:
    enabled: false
    implementation: activedirectory
    url: ldap://openldap.default.svc.cluster.local
    timeout: 5s
    start_tls: false

    tls:
      server_name: ""
      skip_verify: false
      minimum_version: TLS1.2
    base_dn: DC=example,DC=com
    username_attribute: ""
    additional_users_dn: OU=Users
    users_filter: ""
    additional_groups_dn: OU=Groups
    groups_filter: ""
    group_name_attribute: ""
    mail_attribute: ""
    display_name_attribute: ""
    user: CN=Authelia,DC=example,DC=com
    plain_password: ""

  file:
    enabled: true
    path: /config/users_database.yml
    password:
      algorithm: argon2id
      iterations: 1
      key_length: 32
      salt_length: 16
      memory: 1024
      parallelism: 8

access_control:
  default_policy: deny
  networks: []
  rules: []

session:
  name: authelia_session
  same_site: lax
  expiration: 1h
  inactivity: 5m
  remember_me_duration: 1M

redisProvider:
  port: 6379
  username: ""
  database_index: 0
  maximum_active_connections: 8
  minimum_idle_connections: 0

  tls:
    enabled: false
    server_name: ""
    skip_verify: false
    minimum_version: TLS1.2

  high_availability:
    enabled: false
    enabledSecret: false
    sentinel_name: mysentinel
    nodes: []
    route_by_latency: false
    route_randomly: false

regulation:
  max_retries: 3
  find_time: 2m
  ban_time: 5m

storage:
  postgres:
    port: 5432
    database: authelia
    username: authelia
    sslmode: disable
    timeout: 5s

notifier:
  disable_startup_check: false

  filesystem:
    enabled: true
    filename: /config/notification.txt

  smtp:
    enabled: false
    enabledSecret: false
    host: smtp.mail.svc.cluster.local
    port: 25
    timeout: 5s
    username: test
    plain_password: test
    sender: admin@example.com
    identifier: localhost
    subject: "[Authelia] {title}"
    startup_check_address: test@authelia.com
    disable_require_tls: false
    disable_html_emails: false

    tls:
      server_name: ""
      skip_verify: false
      minimum_version: TLS1.2

identity_providers:
  oidc:
    enabled: false

    access_token_lifespan: 1h
    authorize_code_lifespan: 1m
    id_token_lifespan: 1h
    refresh_token_lifespan: 90m

    enable_client_debug_messages: false

    minimum_parameter_entropy: 8

    clients: []

portal:
  open:
    enabled: true